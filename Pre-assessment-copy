# Loading data into pandas
import pandas as pd
movie = pd.read_csv('/Users/Xuhuiz2/Desktop/movie.csv', encoding = "iso-8859-1")
movie.head(5)

# Writing an apply function that transforms a column: use upper function on Genre
movie.info()
movie.describe()
def transfer_column(str):
    Genre = str.upper()
    return Genre
movie['Genre'] = movie['Genre'].apply(transfer_column)
movie['Title_length'] = movie['Movie_Title'].apply(len)
movie.head(5)

# A basic Data Visualization using Seaborn or Plotly library or Matplotl
import matplotlib.pyplot as plt
movie.plot(kind = 'scatter', x = 'Budget', y = 'Adjusted_Gross', title = 'Budget vs Adjusted_Gross')
plt.show()
movie['Day_of_Week'].hist()
plt.title('Which day releases most movies?')
plt.xlabel('Day')
plt.ylabel('num_of_movies')
plt.show()

# Some type of Machine Learning technique on the data
import matplotlib
matplotlib.use('GTKAgg')
 
import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
import pandas as pd
 
# Load CSV and columns 
Y = movie['Adjusted_Gross']
X = movie['Budget']
 
X=X.reshape(len(X),1)
Y=Y.reshape(len(Y),1)
 
# Split the data into training/testing sets
X_train = X[:-250]
X_test = X[-250:]
 
# Split the targets into training/testing sets
Y_train = Y[:-250]
Y_test = Y[-250:]
 
# Plot outputs
plt.scatter(X_test, Y_test,  color='black')
plt.title('Test Data')
plt.xlabel('Budget')
plt.ylabel('Adjusted_Gross')
plt.xticks(())
plt.yticks(())
plt.show()

# Create linear regression object
regr = linear_model.LinearRegression()
 
# Train the model using the training sets
regr.fit(X_train, Y_train)
 
# Plot outputs
plt.plot(X_test, regr.predict(X_test), color='red',linewidth=3)
